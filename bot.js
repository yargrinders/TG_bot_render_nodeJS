require("dotenv").config();
const express = require("express");
const TelegramBot = require("node-telegram-bot-api");

const token = process.env.TELEGRAM_BOT_TOKEN;
const port = process.env.PORT || 3000;
const webhookUrl = process.env.WEBHOOK_URL; // URL —Å–µ—Ä–≤–µ—Ä–∞

const bot = new TelegramBot(token);
const app = express();
app.use(express.json());

// –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const users = [
  { name: "üë§ –ê–†–¢", id: 1472395097, username: "Amontearx" },
  { name: "üë§ –î–º–∏—Ç—Ä–∏–π", id: 998877665, username: null },
  { name: "üë§ –ï–ª–µ–Ω–∞", id: 223344556, username: "elena_username" },
  { name: "üë§ üîí –¢–∞–π–Ω—ã–π –ê–≥–µ–Ω—Ç", id: 111222333, username: null },
  { name: "üë§ üîí –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π", id: 444555666, username: "unknown_user" }
];

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
bot.setWebHook(`${webhookUrl}/bot${token}`);

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –æ—Ç Telegram
app.post(`/bot${token}`, (req, res) => {
    bot.processUpdate(req.body);
    res.sendStatus(200);
});

// –ö–æ–º–∞–Ω–¥–∞ /start —Å –∫–Ω–æ–ø–∫–∞–º–∏
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  // –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const keyboard = {
    inline_keyboard: users.map(user => [
      { text: user.name, callback_data: user.id.toString() } // –ü–µ—Ä–µ–¥–∞—ë–º ID –≤–º–µ—Å—Ç–æ username
    ])
  };

  bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è:", {
    reply_markup: keyboard
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
bot.on("callback_query", (query) => {
  const chatId = query.message.chat.id;
  const userId = parseInt(query.data); // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
  const user = users.find(u => u.id === userId);

  if (user) {
    if (user.username) {
      // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å username ‚Äî —É–ø–æ–º–∏–Ω–∞–µ–º —á–µ—Ä–µ–∑ @
      bot.sendMessage(chatId, `@${user.username}`);
    } else {
      // –ï—Å–ª–∏ –Ω–µ—Ç username ‚Äî —É–ø–æ–º–∏–Ω–∞–µ–º –ø–æ ID (—Å MarkdownV2)
      const mention = `[${user.name}](tg://user?id=${user.id})`.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&'); // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª—ã
      bot.sendMessage(chatId, mention, { parse_mode: "MarkdownV2" });
    }
  } else {
    bot.sendMessage(chatId, "–û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
app.listen(port, () => {
    console.log(`–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
});
